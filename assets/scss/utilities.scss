/**
 * This file should NOT contain any styling (classes or IDs). It should only contain
 * variables, functions, mixins, etc. If you want to override core utility functions
 * or mixins, you can do it here by including the entity with the same name.
 */

@use 'sass:math';
@use 'sass:selector';

@use 'settings' as *;

// /////////////////////////////////////////////////////////////////// Functions
// -----------------------------------------------------------------------------

/**
 * Convert pixel-value leading (line-height) to relative leading
 */

 @function leading($lineHeight, $fontSize) {
  @return math.div(math.round(10 * math.div($lineHeight, $fontSize)), 10);
}

/**
 * Convert pixels to rems
 */

 @function toRem($value) {
  @return math.div($value, $baseFontSize) + rem;
}

// /////////////////////////////////////////////////////////////////// Variables
// -----------------------------------------------------------------------------
// ===================================================================== General
$windowSpacing: toRem(16);
$siteHeaderHeight: toRem(50);

// ===================================================================== Colours
$cararra: #F2F2ED; // 100
$holly: #021509; // 950 | rgba(2, 21, 9, 1)

// ====================================================================== Themes
:root {}

// ////////////////////////////////////////////////////////////////////// Mixins
// -----------------------------------------------------------------------------

// ===================================================================== Styling
@mixin shadow1 {
  box-shadow: 1px 0px 1rem 1px rgba(154, 148, 117, 0.7);
}

@mixin shadow2 {
  box-shadow: 1px 0px 8px 1px rgba(154, 148, 117, 0.12);
}

@mixin focusBoxShadow {
  box-shadow: 0 0 0 5px rgba(0, 123, 255, 0.5);
}

@mixin focusBoxShadowSmall {
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
}

@mixin focusBoxShadowLink {
  box-shadow: 0 0 0 5px rgba(0, 123, 255, 0.5);
  border-radius: 0.125rem;
}

@mixin selection-dark {
  // ::-moz-selection { background-color: #{}; }
  // ::selection { background-color: #{}; }
}

@mixin selection-light {
  // ::-moz-selection { background-color: #{}; }
  // ::selection { background-color: #{}; }
}

@mixin optional-at-root($sel) { @at-root #{if(not &, $sel, selector.append(&, $sel))} { @content; } }
@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') { @content; }
  @include optional-at-root(':-moz-placeholder') { @content; }
  @include optional-at-root('::-moz-placeholder') { @content; }
	@include optional-at-root(':-ms-input-placeholder') { @content; }
	@include optional-at-root('::-ms-input-placeholder') { @content; }
  @include optional-at-root('::placeholder') { @content; }
}

// ================================================================== Typography
@mixin h1 {
  font-size: toRem(32);
  line-height: leading(39, 32);
  font-weight: 400;
}

@mixin h2 {
  font-size: toRem(24);
  line-height: leading(30, 24);
  font-weight: 400;
}

@mixin h3 {
  font-size: toRem(18);
  line-height: leading(24, 18);
  font-weight: 400;
}

@mixin h4 {}

@mixin h5 {}

@mixin h6 {}

@mixin p1 {
  display: inline-block;
}

@mixin p2 {}

@mixin navLink {}

@mixin inlineLink {
  color: blue;
}

/**
 * Mixin for text in <code> elements, see utitlies.scss to edit these vars
 */

@mixin inlineCode {
  color: white;
  background-color: #CBCBCB;
  padding: toRem(4) toRem(8);
  border-radius: toRem(4);
  font-family: monospace;
  font-size: toRem(14);
  white-space: break-spaces;
  transition: background-color 500ms, color 500ms;
}

@mixin blockCode {
  background-color: #CBCBCB;
  padding: toRem(10) toRem(16);
  margin-bottom: 1.25rem;
  border-radius: 0.625rem;
  font-size: toRem(13);
  line-height: leading(21, 14);
  font-family: monospace;
  white-space: break-spaces;
  transition: background-color 500ms, color 500ms;
}
